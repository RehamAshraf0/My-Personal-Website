{"mappings":"AAEA,MAAMA,OACJC,YAAYC,EAAaC,EAAOC,EAAO,KACrCC,KAAKH,YAAcA,EACnBG,KAAKF,MAAQA,EACbE,KAAKC,KAAO,GACZD,KAAKE,UAAY,EACjBF,KAAKD,KAAOA,EACZC,KAAKG,OACLH,KAAKI,YAAa,EAEpBD,OACE,MAAME,EAAUL,KAAKE,UAAYF,KAAKF,MAAMQ,OACtCC,EAAWP,KAAKF,MAAMO,GAExBL,KAAKI,WACPJ,KAAKC,KAAOM,EAASC,UAAU,EAAGR,KAAKC,KAAKK,OAAS,GAErDN,KAAKC,KAAOM,EAASC,UAAU,EAAGR,KAAKC,KAAKK,OAAS,GAGvDN,KAAKH,YAAYY,YAAcT,KAAKC,KAEpC,IAAIS,EAAY,IAEZV,KAAKI,aACPM,GAAa,GAGVV,KAAKI,YAAcJ,KAAKC,OAASM,EAG3BP,KAAKI,YAA4B,KAAdJ,KAAKC,OACjCD,KAAKI,YAAa,EAClBJ,KAAKE,YACLQ,EAAY,MALZA,EAAY,KACZV,KAAKI,YAAa,GAOpBO,YAAW,IAAMX,KAAKG,QAAQO,IAMlC,SAASE,OACP,MAAMf,EAAcgB,SAASC,cAAc,WACrChB,EAAQiB,KAAKC,MAAMnB,EAAYoB,aAAa,eAC5ClB,EAAOF,EAAYoB,aAAa,aAEtC,IAAItB,OAAOE,EAAaC,EAAOC,GAPjCc,SAASK,iBAAiB,mBAAoBN,MAY9C,MAAMO,gBAAkB,SAAUC,GAChCA,EAAQC,SAASC,IACVA,EAAEC,iBACPV,SAASC,cAAc,YAAYU,UAAUC,IAAI,kBACjDZ,SAASC,cAAc,YAAYU,UAAUC,IAAI,iBACjDZ,SAASC,cAAc,YAAYU,UAAUC,IAAI,kBAI/CC,iBAAmB,IAAIC,qBAAqBR,gBAAiB,CACjES,KAAM,KACNC,WAAY,MACZC,UAAW,KAGbJ,iBAAiBK,QAAQlB,SAASC,cAAc,qBAIhD,MAAMkB,cAAgB,SAAUZ,GAC9BA,EAAQC,SAASC,IACVA,EAAEC,iBACPV,SACGoB,iBAAiB,oCACjBZ,SAASa,IACRA,EAAGV,UAAUC,IAAI,qBAErBZ,SACGoB,iBAAiB,kCACjBZ,SAASa,IACRA,EAAGV,UAAUC,IAAI,oBAErBZ,SACGoB,iBAAiB,oCACjBZ,SAASa,IACRA,EAAGV,UAAUC,IAAI,qBAKnBU,eAAiB,IAAIR,qBAAqBK,cAAe,CAC7DJ,KAAM,KACNC,WAAY,MACZC,UAAW,KAGbK,eAAeJ,QAAQlB,SAASC,cAAc,YAI9C,MAAMsB,eAAiB,SAAUhB,GAC/BA,EAAQC,SAASC,IACVA,EAAEC,gBACPV,SAASC,cAAc,iBAAiBU,UAAUC,IAAI,iBAIpDY,gBAAkB,IAAIV,qBAAqBS,eAAgB,CAC/DR,KAAM,KACNC,WAAY,MACZC,UAAW,IAGbO,gBAAgBN,QAAQlB,SAASC,cAAc,aAM/C,MAAMwB,UAAYzB,SAASC,cAAc,uBACnCyB,WAAa1B,SAASC,cAAc,iBACpC0B,YAAc3B,SAASoB,iBAAiB,iBAExCQ,WAAa,WACjBH,UAAUd,UAAUkB,OAAO,UAC3BH,WAAWf,UAAUkB,OAAO,yBAG9BJ,UAAUpB,iBAAiB,QAASuB,YACpCD,YAAYnB,SAASsB,IACnBA,EAAKzB,iBAAiB,SAAS,WACzBqB,WAAWf,UAAUoB,SAAS,yBAAyBH","sources":["js/functionality.js"],"sourcesContent":["/* Typing Effect */\r\n\r\nclass Typing {\r\n  constructor(textElement, words, wait = 3000) {\r\n    this.textElement = textElement;\r\n    this.words = words;\r\n    this.text = \"\";\r\n    this.wordIndex = 0;\r\n    this.wait = wait;\r\n    this.type();\r\n    this.isDeleting = false;\r\n  }\r\n  type() {\r\n    const current = this.wordIndex % this.words.length;\r\n    const fullText = this.words[current];\r\n\r\n    if (this.isDeleting) {\r\n      this.text = fullText.substring(0, this.text.length - 1);\r\n    } else {\r\n      this.text = fullText.substring(0, this.text.length + 1);\r\n    }\r\n\r\n    this.textElement.textContent = this.text;\r\n\r\n    let typeSpeed = 110;\r\n\r\n    if (this.isDeleting) {\r\n      typeSpeed /= 2;\r\n    }\r\n\r\n    if (!this.isDeleting && this.text === fullText) {\r\n      typeSpeed = 1500;\r\n      this.isDeleting = true;\r\n    } else if (this.isDeleting && this.text === \"\") {\r\n      this.isDeleting = false;\r\n      this.wordIndex++;\r\n      typeSpeed = 500;\r\n    }\r\n\r\n    setTimeout(() => this.type(), typeSpeed);\r\n  }\r\n}\r\n\r\ndocument.addEventListener(\"DOMContentLoaded\", init);\r\n\r\nfunction init() {\r\n  const textElement = document.querySelector(\".typing\");\r\n  const words = JSON.parse(textElement.getAttribute(\"data-words\"));\r\n  const wait = textElement.getAttribute(\"data-wait\");\r\n\r\n  new Typing(textElement, words, wait);\r\n}\r\n\r\n/* Animation on scroll */\r\n\r\nconst animateProjects = function (entries) {\r\n  entries.forEach((e) => {\r\n    if (!e.isIntersecting) return;\r\n    document.querySelector(\".card--1\").classList.add(\"animateToRight\");\r\n    document.querySelector(\".card--3\").classList.add(\"animateToLeft\");\r\n    document.querySelector(\".card--2\").classList.add(\"animateUp\");\r\n  });\r\n};\r\n\r\nconst observerProjects = new IntersectionObserver(animateProjects, {\r\n  root: null,\r\n  rootMargin: \"0px\",\r\n  threshold: 0.2,\r\n});\r\n\r\nobserverProjects.observe(document.querySelector(\".cards-container\"));\r\n\r\n//\r\n\r\nconst animateSkills = function (entries) {\r\n  entries.forEach((e) => {\r\n    if (!e.isIntersecting) return;\r\n    document\r\n      .querySelectorAll(\".skills__img-box:nth-child(3n-2)\")\r\n      .forEach((el) => {\r\n        el.classList.add(\"animateToRight\");\r\n      });\r\n    document\r\n      .querySelectorAll(\".skills__img-box:nth-child(3n)\")\r\n      .forEach((el) => {\r\n        el.classList.add(\"animateToLeft\");\r\n      });\r\n    document\r\n      .querySelectorAll(\".skills__img-box:nth-child(3n-1)\")\r\n      .forEach((el) => {\r\n        el.classList.add(\"animateUp\");\r\n      });\r\n  });\r\n};\r\n\r\nconst observerSkills = new IntersectionObserver(animateSkills, {\r\n  root: null,\r\n  rootMargin: \"0px\",\r\n  threshold: 0.2,\r\n});\r\n\r\nobserverSkills.observe(document.querySelector(\".skills\"));\r\n\r\n//\r\n\r\nconst animateContact = function (entries) {\r\n  entries.forEach((e) => {\r\n    if (!e.isIntersecting) return;\r\n    document.querySelector(\".contact__btn\").classList.add(\"animateUp\");\r\n  });\r\n};\r\n\r\nconst observerContact = new IntersectionObserver(animateContact, {\r\n  root: null,\r\n  rootMargin: \"0px\",\r\n  threshold: 1,\r\n});\r\n\r\nobserverContact.observe(document.querySelector(\".contact\"));\r\n\r\n//\r\n\r\n/* Toggle Menu */\r\n\r\nconst navbarBtn = document.querySelector(\".navbar__toggle-btn\");\r\nconst navbarList = document.querySelector(\".navbar__list\");\r\nconst navbarItems = document.querySelectorAll(\".navbar__item\");\r\n\r\nconst toggleMenu = function () {\r\n  navbarBtn.classList.toggle(\"opened\");\r\n  navbarList.classList.toggle(\"navbar__list--opened\");\r\n};\r\n\r\nnavbarBtn.addEventListener(\"click\", toggleMenu);\r\nnavbarItems.forEach((item) => {\r\n  item.addEventListener(\"click\", function () {\r\n    if (navbarList.classList.contains(\"navbar__list--opened\")) toggleMenu();\r\n  });\r\n});\r\n"],"names":["Typing","constructor","textElement","words","wait","this","text","wordIndex","type","isDeleting","current","length","fullText","substring","textContent","typeSpeed","setTimeout","init","document","querySelector","JSON","parse","getAttribute","addEventListener","animateProjects","entries","forEach","e","isIntersecting","classList","add","observerProjects","IntersectionObserver","root","rootMargin","threshold","observe","animateSkills","querySelectorAll","el","observerSkills","animateContact","observerContact","navbarBtn","navbarList","navbarItems","toggleMenu","toggle","item","contains"],"version":3,"file":"index.86f47114.js.map"}